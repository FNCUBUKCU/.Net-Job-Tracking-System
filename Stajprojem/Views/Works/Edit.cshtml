@model Works

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
      
        <label for="MyProperty" style="color:Highlight">Work Number</label>
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number, new {  htmlAttributes = new { @readonly= "readonly", @class = "form-control", @cols = "100", @rows = "1", @style = "width: 50%;" } })
                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <label for="MyProperty" style="color:Highlight">Work Name</label>
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {  htmlAttributes = new { @readonly= "readonly", @class = "form-control", @cols = "100", @rows = "1", @style = "width: 50%;" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        

        <label for="MyProperty" style="color:Highlight">Start Date</label>
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, "{0:dd/MM/yyyy}", new {  htmlAttributes = new { @class = "form-control", @cols = "100", @rows = "1", @style = "width: 50%;" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <label for="MyProperty" style="color:Highlight">End Date</label>
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control", @cols = "100", @rows = "1", @style = "width: 50%;" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <label for="MyProperty" style="color:Highlight">Update Explanation</label>
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpdateExplanation, new { htmlAttributes = new { @class = "form-control", @cols = "100", @rows = "1", @style = "width: 100%;" } })
                @Html.ValidationMessageFor(model => model.UpdateExplanation, "", new { @class = "text-danger" })
            </div>
        </div>

        <label for="MyProperty" style="color:Highlight">Statu</label>
        <div class="form-group">
            <div class="col-md-10">


                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    listItems.Add(new SelectListItem
                    {
                        Text = "Active",
                        Value = "A"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Passive",
                        Value = "P",
                    });

                }

                @Html.DropDownListFor(model => model.Status, listItems, "-- Select Status --", htmlAttributes: new { @class = "form-control", @cols = "100", @rows = "1", @style = "width: 50%;" })
              </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <input type="submit" value="SAVE" style="background-color:#428bca" class="btn btn-success btn-block" />
             
            </div>
        </div>

    </div>
   }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
